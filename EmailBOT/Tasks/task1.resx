<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnView.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAa5JREFUSEvtlrlKRDEUhq8WiohLJaiPIDaWYqsgFi4PYGXjio2v6KioCO61PoEL
        iuDyfzKBSzg5N2PEyg8+hmSS/OTm5M5U/7RZkPfyM9NXuS6LuZNWQMqPthuyCGtxzzX5Lgnflj/GWtwT
        fiXcWtwzUBxuLe5ZpyjcWtwzhgonGDuqdmtxzxkZE8K5atlYi5eYjTW5xGysySVmE0+clrlw3vH8bOKJ
        VvF49Ml+OSF36cglDvZ8kTuySxZjBVhyVeYk9EpeGAfyqW1LbskemUUc0HTG4/JMxvOCp3JMNhJP9M6Y
        nYbQS7koB9ouyWvJdyeycef10JR7Ejhf2ldyiI4I+kL4Jh0e9YCUUxIOJW12mmJZMoYzd6kHoHfGj5Ix
        PNoUg5IxD98th3ooemfMYozxgnncjKHSXeqhKSclcH1oU0gpViRjOn7UluFHnntKmwKyimtY3krGrNLh
        UQ9IeSG7JVeEe0rfjaSQOFNkpyH0TY5Kl9y/t1wl4OUQwi0J5fNcjsgk8zInnFfmrAR2zj3dl1T6s+RM
        ebzslFDmNIb/NoSF8CM6/hLCj6uqan0BGEFvkyd4jtUAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="label9.ToolTip" xml:space="preserve">
    <value>Fo delay Set value as Second and checked #Delay after send each mail  or #Delay after send ever 20 mails
Example : if checked #Delay after send each mail, then delay occurs after send each email.
 if checked #Delay after send every 20 mails, then delay occurs after every 20 emails.
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>114, 17</value>
  </metadata>
  <data name="deleteSendData.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAv5JREFUaEPtmUtPE1EYhlnBjwD/ACTVsqZAp0VbLkEERCyKBFTUQlSIC6Nxoztc
        uCCuwD9h/AkCq4IJwQVG06mJJoXe6GXamX7O1O9IczhE+DhySuKTPIHMO9PzcFk0aZ0s3gA0LGVhdjln
        rS5lrb3lXBmq/X3NWn2XhRnnXnysNnibhcbFlLW+mC7DkUxZEecZfFwtzm9zIWGuv05YcBwXds1ITfwl
        XsbN2VdxEyjaz4bxZdTx/Ke5ZgvMZz/M90/jB/89XsShyd4+VN9ru4KzOuZjxcz89xIwn+jQhNMBHsfg
        XPW9c7FiGid1hKMlqBYvH8px7//nTH0tQrV4+VCOe/+RCX0p9IS2jdjYtgE1rn59uxDE7H0Gtwx98LMB
        Z8ItI4rZ+/RsFnRbOAt2bxYO/gDaRiHo+5TXbaGW1TbyUd96PoDZf2fufhlUihl0Hk2XQaWYQefhXQtU
        ihl0Zm9boFLMoBOeMkGlmEHnwaQJKsUMOvcmSiByZCAD7gs6tLr1yveydyZm0Jm+VQKRbvvglpZvFVvd
        Mek7EzPo3BkvgUh2OFP2zsQMOlM37HeNAvkA2TsTM+hMjhVBJB8ge2diBp2JkAEi+QDZOxMz6IyPGiCS
        D5C9MzGDzs1rBRDJB8jemZhBZ2ykACL5ANk7EzPohIbzIJIPkL0zMYPO6FAeRPIBsncmZtAZGcyDSD5A
        9s7EDDpXB3Igkg+QvTMxg87Q5RyI5ANk70zMoHOlPwsi+QDZOxMz6Az0ZUEkHyB7Z2IGnf7ePRDJB8je
        mZhBp697D0TyAbJ3JmbQ6Q1mQKTLFf1z+HmXLn1nYgad7kAGRHo7dioRLvtwb+eO9J2JGXSCF9OgUsyg
        c6krDSrFDDpd/nTGFlTo96VTmEHH702t+bUUqNCnJU/+IaDXm5zRvClQopY8+cewgQA0dHYmI7ZwykaG
        h6EeM06GpsUb2z3JSEd7Ek5D5yznTDxeDs3NUO/x7IY9nsRKW1siY38FmTqvafvROcM5C4/9T41TV/cL
        kwQMKyOxBj4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="label13.ToolTip" xml:space="preserve">
    <value>Use tags to content (Text/Plain) or Content (html) ,Its change value randomly 
Example : Hello , your invoice number is #INVOICE# 
Output 1 : Hello , your invoice number is INV/HRY/10845454
Output 2 : Hello , your invoice number is INV/ERS/33664365
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>37</value>
  </metadata>
</root>