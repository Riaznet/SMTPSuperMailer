<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAU4AAAIRCAMAAAASvaTkAAAABGdBTUEAALGPC/xhBQAAAqxQTFRF////
        thwcKChpyFRU7cbG2o2NyFVVXV2O46mp+/Dw8dTU9uLi/v7+1n5+UFCF0XBwvLzQKytrhoaqvjc3a2uX
        7cfH6Le3oaG9uikp0XFxuioquyoqOTl119fj/PT0vzg4MDBvw0VF9vb5+/v8eHihQUF7k5O0/Pz9/v39
        35ubycnZ7+/0rq7H7u7zjIyv+/LyQkJ79/f5+vHxMTFvmpq4uCEhKSlq246OvDAw/fj4/vv7w0ZGuSYm
        tyAgyltbth0d+OnpzGJi5eXt1Hp6y15euCMj9uTk89ra5rGxwkFB6Li4cXGc8dPT3ZWV1n9/0NDep6fC
        5KurNzd0tbXL/fr61oGB+e3t+OjoLCxs4aKi03V1xElJ/PX19+bmvTEx8M/P5+fu4qWlyVZWz2lp783N
        zGBgzWNj5ubt3JGR89nZwDo6zWVl+ezs35ycgYGn03h42NjkVlaJ25CQ+Ovr68DAuSQkuSUl5KysVFSI
        x8fYZGST0Gxs7srKuy0t14OD57S0wMDTxk5O68HBwT4+6bu7vTMztx8fuScnf3+m2IaGx1BQ5a6uyVhY
        wsLVwUBA3ZaW8NDQwDw8/vz8/Pf3vC4uuigox1FR2oyMNTVy8fH03piY6r6+2YiI5rCwbm6a8tXV1Xt7
        7MTEvjU10nNz0G5u46en03Z2w0JC3JKS2YmJyFJS29vmfHykQEB61NThpaXA4eHqR0d/jo6wdHSe9d/f
        Ojp19+fnTEyC8/P3W1uM4+Ps7Ozx1X19PDx38tfX9eHh9N7e7svL+u7urKzF+Pj6SUmAhISpzMzcsrLK
        dnag9NzcYGCQxUpKkZGy4J6e4ODpy11d6r296La2Li5t4qOjaGiWxUxM3t7o35qa3NzmuLjOV1eK6enw
        ZmaUnZ27lpa2qqrEUlKG4KCgsLDIq2aa1wAAAAlwSFlzAAAewAAAHsABES62twAAFQVJREFUeF7t3fmj
        HEW1B/C5cxO4S0KEQMwmYRETBCEBQ0jCIpqAYdUnBsWETQmyBRCDkU2UXRABRcBdcH2giLiAgiDq0+f2
        XJ++fftH3lTPd2a6Z6pP1znT09PT8/38krk9XTXTJ31vdVVXna4RERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        EREREREREVHJ/fIVeJGjt+LfMbS7/h28ys3p112BV2PnF/V6fR+8zsvzE8/j1dh5dSOc9Z34ISfLJjZv
        xcsx8+gjLpz169fg5zycOjExMR+vx8wro2jW63tdgA05uLwRzokX8cN42QvhrK9+I7b0bdpFc2IJfhor
        ZyGYDav/im39emcUzomT8eM42YlYOi/8Czb26V3NcJ6LH8fIQUcjlJFHfoHNfbm0Gc1xPD0PRyDhT/+H
        7f24GdGcuAobxsdziGPbb/GG3bxjEc2JtW/ApnHxxDGIYsfOeXjP6iMIZsObsGlc3IUYxj2zEm8aLUAs
        nV9h23h49gCEMGHfn+Ftk227EErncmwcD10NUcuvD8L7Fm9FJJsuxdaxcA3i1+2aH2EHg4sQyKZxOj2f
        QPR6PW3ucG5HHFvG6PTcB8Hz+ObV2EfrDISxZQe2V9+av0PsfB55LfZSOhBhbDsfb1TeWxA5vz/dgt1U
        TkEQO+7FO5XXHprz2/u/sZ/GZxHEmBvxVsW9CmFL95/YU+ExxDBmE96qOKEhanlS20H6CUKYcDrerLSD
        lyNmkv9Q3kG6ChFMGItrz1cgYrLdqjtIZx+HCCacOA6n5/UIWIanL8H+IZIdzLaL8XaF/RPClekQxR2k
        PRC/bvfj/eo6AtHK9r3gDtIsotej8o37SqlH1OWAj6FQlvcher3egz2qKqwhgr1/ilIZLkPwep2APapq
        X0Qq0H+hmOh+xM6n2qfnBXsjTqFCpiyeidD5/D32qabwhqgl+47cg+07mD4fwV5VpGmIWk7L6iDF7mB6
        vAt7VdHbECKVf3sdSqf4MgKXYhF2q6A9ESGdn4t3kNZvRtxS3LcKO1bO1YiP1nMo7/UBhC3VPdixcgKG
        5ryOQHmvExC1VJc9iD2rxtAQRaTbm9ciaIIp7FoxpoaoYU+U9/obYiZYuAH7VoutIarX34LyXrciZpIL
        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
</value>
  </data>
</root>